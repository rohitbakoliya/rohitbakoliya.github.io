{"version":3,"sources":["webpack:///./src/components/Projects/MajorProjects.js","webpack:///./src/pages/projects.js"],"names":["MajorProjects","majorProjects","useStaticQuery","React","createElement","Fragment","allMarkdownRemark","edges","map","_ref","node","ProjectsWrapper","key","id","ProjectsContent","ProjectsDetails","className","frontmatter","title","excerpt","ProjectLinks","Button","as","Link","to","fields","slug","target","href","demo","IconButton","label","icon","src","ProjectPreview","IFrame","livedemo","iframe","match","Tags","IconsLib","tags","reduce","x","y","Projects","Layout","SEO"],"mappings":"0LAqFeA,MAvEOA,KAElB,MAAMC,EAAgBC,yBAAe,cAgCrC,OACIC,IAAAC,cAAAD,IAAAE,SAAA,KACKJ,EAAcK,kBAAkBC,MAAMC,IAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAChDN,IAAAC,cAACO,IAAe,CAACC,IAAKF,EAAKG,IACvBV,IAAAC,cAACU,IAAe,KACZX,IAAAC,cAACW,IAAe,KACZZ,IAAAC,cAAA,OAAKY,UAAU,6BACXb,IAAAC,cAAA,UAAKM,EAAKO,YAAYC,OACtBf,IAAAC,cAAA,SAAIM,EAAKO,YAAYE,SACrBhB,IAAAC,cAACgB,IAAY,KACTjB,IAAAC,cAACiB,IAAM,CAACC,GAAIC,OAAMC,GAAId,EAAKe,OAAOC,MAAM,WAGxCvB,IAAAC,cAACiB,IAAM,CAACM,OAAO,UAAUL,GAAG,IAAIM,KAAMlB,EAAKO,YAAYY,MAAM,aAG7D1B,IAAAC,cAAC0B,IAAU,CAACC,MAAM,SAASC,KAAM,CAAC,MAAO,UAAWJ,KAAMlB,EAAKO,YAAYgB,SAIvF9B,IAAAC,cAAC8B,IAAc,KACX/B,IAAAC,cAAC+B,IAAM,CACHC,WAAY1B,EAAKO,YAAYoB,OAAOC,MAAM,WAC1CL,IAAKvB,EAAKO,YAAYoB,SAE1BlC,IAAAC,cAACmC,IAAI,KAEDpC,IAAAC,cAACoC,IAAa9B,EAAKO,YAAYwB,KAAKC,OAAO,CAACC,EAAGC,KAAQD,EAAEC,IAAK,EAAOD,GAAI,a,wBC5D1FE,UATEA,IAET1C,IAAAC,cAAC0C,IAAM,KACH3C,IAAAC,cAAC2C,IAAG,CAAC7B,MAAM,8BACXf,IAAAC,cAACJ,EAAa","file":"component---src-pages-projects-js-d0a1af6ee5ecb030a787.js","sourcesContent":["import { graphql, Link, useStaticQuery } from 'gatsby';\nimport React from 'react';\nimport Button, { IconButton } from '../common/Button';\nimport IconsLib from '../common/IconsLib';\nimport IFrame from '../common/IFrame';\nimport {\n    ProjectsContent,\n    ProjectsWrapper,\n    ProjectsDetails,\n    ProjectLinks,\n    ProjectPreview,\n    Tags,\n} from './MajorProjects.style';\n\nconst MajorProjects = () => {\n    // can use default sort: { fields: frontmatter___date, order: DESC }\n    const majorProjects = useStaticQuery(graphql`\n        query {\n            allMarkdownRemark(\n                filter: { fields: { posttype: { eq: \"projects\" } } }\n                sort: { fields: fields___fileIndex, order: DESC }\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            excerpt\n                            date\n                            iframe\n                            demo\n                            src\n                            tags\n                            pinned\n                            info {\n                                idea\n                                tech\n                            }\n                        }\n                        fields {\n                            slug\n                        }\n                    }\n                }\n            }\n        }\n    `);\n\n    return (\n        <>\n            {majorProjects.allMarkdownRemark.edges.map(({ node }) => (\n                <ProjectsWrapper key={node.id}>\n                    <ProjectsContent>\n                        <ProjectsDetails>\n                            <div className=\"project__detail-container\">\n                                <h2>{node.frontmatter.title}</h2>\n                                <p>{node.frontmatter.excerpt}</p>\n                                <ProjectLinks>\n                                    <Button as={Link} to={node.fields.slug}>\n                                        Details\n                                    </Button>\n                                    <Button target=\"__blank\" as=\"a\" href={node.frontmatter.demo}>\n                                        Live Demo\n                                    </Button>\n                                    <IconButton label=\"github\" icon={['fab', 'github']} href={node.frontmatter.src} />\n                                </ProjectLinks>\n                            </div>\n                        </ProjectsDetails>\n                        <ProjectPreview>\n                            <IFrame\n                                livedemo={!!node.frontmatter.iframe.match('youtube')}\n                                src={node.frontmatter.iframe}\n                            />\n                            <Tags>\n                                {/* Converting array to object */}\n                                <IconsLib {...node.frontmatter.tags.reduce((x, y) => ((x[y] = true), x), {})} />\n                            </Tags>\n                        </ProjectPreview>\n                    </ProjectsContent>\n                </ProjectsWrapper>\n            ))}\n        </>\n    );\n};\n\nexport default MajorProjects;\n","import React from 'react';\nimport MajorProjects from '../components/Projects/MajorProjects';\nimport SEO from '../components/SEO/SEO';\n\nimport Layout from '../Layout/Layout';\n\nconst Projects = () => {\n    return (\n        <Layout>\n            <SEO title=\"Projects | Rohit Bakoliya\" />\n            <MajorProjects />\n        </Layout>\n    );\n};\n\nexport default Projects;\n"],"sourceRoot":""}