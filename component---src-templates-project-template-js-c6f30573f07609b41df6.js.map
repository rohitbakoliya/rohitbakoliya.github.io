{"version":3,"sources":["webpack:///./src/templates/project-template.style.js","webpack:///./src/components/common/Flex.js","webpack:///./src/components/common/SocialShareSection.js","webpack:///./src/templates/project-template.js","webpack:///./src/components/common/SplitLayout.js"],"names":["InfoTitle","styled","h4","withConfig","displayName","componentId","p","theme","primaryColor","ProjectWrapper","section","props","spacing","sectionTop","sectionBottom","media","fablet","tablet","Flex","div","column","justify","align","nowrap","SocialShareSection","_ref","url","title","fbShareLink","twShareLink","linkedInShareLink","React","createElement","className","aria-label","rel","target","href","FontAwesomeIcon","style","fontSize","icon","Project","data","projectFrontmatter","markdownRemark","frontmatter","Layout","SEO","description","excerpt","slug","fields","ProjectLinks","Button","as","demo","IconButton","label","src","info","idea","tech","map","i","key","links","link","IFrame","iframe","livedemo","match","SplitLayout","content","dangerouslySetInnerHTML","__html","html","aside","location","SplitLayoutWrapper"],"mappings":"0IAEO,MAAMA,EAAYC,UAAOC,GAAEC,WAAA,CAAAC,YAAA,mCAAAC,YAAA,eAATJ,CAAS,4NACrBK,GAAKA,EAAEC,MAAMC,cAkBbC,EAAiBR,UAAOS,QAAOP,WAAA,CAAAC,YAAA,wCAAAC,YAAA,eAAdJ,CAAc,6aACtCU,GAASA,EAAMJ,MAAMK,QAAQC,WAC7BF,GAASA,EAAMJ,MAAMK,QAAQE,cAalBR,GAAKA,EAAEC,MAAMC,aAuBbF,GAAKA,EAAEC,MAAMQ,MAAMC,OAGnBV,GAAKA,EAAEC,MAAMQ,MAAME,Q,4BCpDrBC,MARFjB,UAAOkB,IAAGhB,WAAA,CAAAC,YAAA,OAAAC,YAAA,gBAAVJ,CAAU,uFAEDU,GAAUA,EAAMS,OAAS,SAAW,MACnCT,GAAUA,EAAMU,QAAUV,EAAMU,QAAU,gBAC9CV,GAAUA,EAAMW,MAAQX,EAAMW,MAAQ,SACxCX,GAAUA,EAAMY,OAAS,UAAY,Q,4DCsBvCC,MAzBYC,IAAqB,IAApB,IAAEC,EAAG,MAAEC,GAAOF,EACtC,MAAMG,EAAc,4CAA4CF,EAC1DG,EAAc,kCAAkCF,aAAiBD,IACjEI,EAAoB,uDAAuDJ,WAAaC,kCAE9F,OACII,IAAAC,cAAA,OAAKC,UAAU,sBACXF,IAAAC,cAAA,KAAGE,aAAW,oBAAoBC,IAAI,sBAAsBC,OAAO,UAAUC,KAAMT,GAC/EG,IAAAC,cAACM,IAAe,CAACC,MAAO,CAAEC,SAAU,IAAMC,KAAM,CAAC,MAAO,iBAE5DV,IAAAC,cAAA,KAAGE,aAAW,mBAAmBC,IAAI,sBAAsBC,OAAO,UAAUC,KAAMR,GAC9EE,IAAAC,cAACM,IAAe,CAACC,MAAO,CAAEC,SAAU,IAAMC,KAAM,CAAC,MAAO,cAE5DV,IAAAC,cAAA,KAAGE,aAAW,oBAAoBC,IAAI,sBAAsBC,OAAO,UAAUC,KAAMP,GAC/EC,IAAAC,cAACM,IAAe,CAACC,MAAO,CAAEC,SAAU,IAAMC,KAAM,CAAC,MAAO,oBCmGzDC,UAzGC/B,IACZ,MAAM,KAAEgC,GAAShC,EACXiC,EAAqBD,EAAKE,eAAeC,YAE/C,OACIf,IAAAC,cAACe,IAAM,KACHhB,IAAAC,cAACgB,IAAG,CACArB,MAAOiB,EAAmBjB,MAC1BsB,YAAaL,EAAmBM,QAChCC,KAAMR,EAAKE,eAAeO,OAAOD,OAErCpB,IAAAC,cAACvB,EAAc,KACXsB,IAAAC,cAACd,EAAI,CAACe,UAAU,kBACZF,IAAAC,cAAA,UAAKY,EAAmBjB,OAExBI,IAAAC,cAACqB,IAAY,CAACpB,UAAU,kBACpBF,IAAAC,cAACsB,IAAM,CAAClB,OAAO,UAAUmB,GAAG,IAAIlB,KAAMO,EAAmBY,MAAM,aAG/DzB,IAAAC,cAACyB,IAAU,CAACC,MAAM,SAASjB,KAAM,CAAC,MAAO,UAAWJ,KAAMO,EAAmBe,QAIrF5B,IAAAC,cAAA,WAASC,UAAU,iBACfF,IAAAC,cAAA,WACKY,EAAmBgB,KAAKC,MACrB9B,IAAAC,cAAA,aACID,IAAAC,cAAChC,EAAS,KAAC,QACX+B,IAAAC,cAAA,SAAIY,EAAmBgB,KAAKC,OAGnCjB,EAAmBgB,KAAKE,MACrB/B,IAAAC,cAAA,aACID,IAAAC,cAAChC,EAAS,KAAC,qBACX+B,IAAAC,cAAA,UACKY,EAAmBgB,KAAKE,KAAKC,IAAI,CAACD,EAAME,IACrCjC,IAAAC,cAAA,MAAIiC,IAAKD,GAAIF,MAK5BlB,EAAmBgB,KAAKM,OACrBnC,IAAAC,cAAA,WACID,IAAAC,cAAChC,EAAS,KAAC,qBACX+B,IAAAC,cAAA,UACKY,EAAmBgB,KAAKM,MAAMH,IAAI,CAACI,EAAMH,IACtCjC,IAAAC,cAAA,MAAIiC,IAAKD,GACLjC,IAAAC,cAAA,KAAGK,KAAM8B,EAAK,IAAKA,EAAK,SAOhDpC,IAAAC,cAAA,OAAKC,UAAU,6BACXF,IAAAC,cAACoC,IAAM,CACHT,IAAKf,EAAmByB,OACxBC,WAAY1B,EAAmByB,OAAOE,MAAM,eAKxDxC,IAAAC,cAACwC,IAAW,CACRC,QACI1C,IAAAC,cAAA,WACIC,UAAU,mBACVyC,wBAAyB,CAAEC,OAAQhC,EAAKE,eAAe+B,QAG/DC,MACI9C,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAACR,EAAkB,CAACE,IAAKf,EAAMmE,SAASzC,KAAMV,MAAOiB,EAAmBjB,e,kCCpFpG,yBAKA,MAAMoD,EALN,UAK2B9E,QAAOS,QAAOP,WAAA,CAAAC,YAAA,kCAAAC,YAAA,eAAdJ,CAAc,sYACnCK,GAAKA,EAAEC,MAAMK,QAAQE,cAkBdH,GAASA,EAAMJ,MAAMQ,MAAMC,QA6BzBwD,IAdK/C,IAAA,IAAC,QAAEgD,EAAO,MAAEI,GAAOpD,EAAA,OACnCM,IAAAC,cAAC+C,EAAkB,KACfhD,IAAAC,cAAA,WAASC,UAAU,mBAAmBwC,GAAWA,GACjD1C,IAAAC,cAAA,WAASC,UAAU,iBACfF,IAAAC,cAAA,SAAOC,UAAU,iBAAiB4C,GAASA","file":"component---src-templates-project-template-js-c6f30573f07609b41df6.js","sourcesContent":["import styled from 'styled-components';\n\nexport const InfoTitle = styled.h4`\n    color: ${p => p.theme.primaryColor};\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    font-weight: 600;\n    font-size: 16px;\n    margin: 15px 0;\n\n    ::after {\n        content: '';\n        border-top: 1px solid;\n        margin: 0 20px 0 10px;\n        flex: 1 0 20px;\n    }\n`;\n\nexport const ProjectWrapper = styled.section`\n    ${props => props.theme.spacing.sectionTop};\n    ${props => props.theme.spacing.sectionBottom};\n\n    /*custom headings styles for project-template*/\n    h1 {\n        font-size: 1.8rem;\n        margin-bottom: 50px;\n    }\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n        margin: 20px 0;\n        color: ${p => p.theme.primaryColor};\n    }\n\n    li {\n        margin: 5px 0;\n    }\n    .project__title {\n        margin-bottom: 50px;\n        h1 {\n            margin: 0;\n            line-height: 70px;\n        }\n        .project__links {\n            margin: 0;\n        }\n    }\n\n    .project__info {\n        margin-bottom: 70px;\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        grid-gap: 20px;\n\n        @media ${p => p.theme.media.fablet} {\n            grid-template-columns: 0.6fr 1fr;\n        }\n        @media ${p => p.theme.media.tablet} {\n            grid-template-columns: 1fr;\n        }\n    }\n\n    .project__iframe-container {\n        width: 100%;\n        margin: 10px 0;\n    }\n`;\n","import styled from 'styled-components';\n\nconst Flex = styled.div`\n    display: flex;\n    flex-direction: ${props => (props.column ? 'column' : 'row')};\n    justify-content: ${props => (props.justify ? props.justify : 'space-between')};\n    align-items: ${props => (props.align ? props.align : 'center')};\n    flex-wrap: ${props => (props.nowrap ? 'no-wrap' : 'wrap')};\n`;\n\nexport default Flex;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst SocialShareSection = ({ url, title }) => {\n    const fbShareLink = `https://facebook.com/sharer/sharer.php?u=${url}`;\n    const twShareLink = `http://twitter.com/share?text=\"${title}\" - &url=${url}`;\n    const linkedInShareLink = `https://www.linkedin.com/shareArticle?mini=true&url=${url}&title=${title}&source=rohitbakoliy portfolio`;\n\n    return (\n        <div className=\"blog__social-share\">\n            <a aria-label=\"share on facebook\" rel=\"noopener norefferer\" target=\"__blank\" href={fbShareLink}>\n                <FontAwesomeIcon style={{ fontSize: 24 }} icon={['fab', 'facebook-f']} />\n            </a>\n            <a aria-label=\"share on twitter\" rel=\"noopener norefferer\" target=\"__blank\" href={twShareLink}>\n                <FontAwesomeIcon style={{ fontSize: 24 }} icon={['fab', 'twitter']} />\n            </a>\n            <a aria-label=\"share on linkedin\" rel=\"noopener norefferer\" target=\"__blank\" href={linkedInShareLink}>\n                <FontAwesomeIcon style={{ fontSize: 24 }} icon={['fab', 'linkedin-in']} />\n            </a>\n        </div>\n    );\n};\n\nSocialShareSection.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n};\n\nexport default SocialShareSection;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ProjectWrapper, InfoTitle } from './project-template.style';\nimport Layout from '../Layout/Layout';\nimport SEO from '../components/SEO/SEO';\nimport Flex from '../components/common/Flex';\nimport { ProjectLinks } from '../components/Projects/MajorProjects.style';\nimport Button, { IconButton } from '../components/common/Button';\nimport IFrame from '../components/common/IFrame';\nimport SplitLayout from '../components/common/SplitLayout';\nimport SocialShareSection from '../components/common/SocialShareSection';\n\nconst Project = props => {\n    const { data } = props;\n    const projectFrontmatter = data.markdownRemark.frontmatter;\n\n    return (\n        <Layout>\n            <SEO\n                title={projectFrontmatter.title}\n                description={projectFrontmatter.excerpt}\n                slug={data.markdownRemark.fields.slug}\n            />\n            <ProjectWrapper>\n                <Flex className=\"project__title\">\n                    <h1>{projectFrontmatter.title}</h1>\n\n                    <ProjectLinks className=\"project__links\">\n                        <Button target=\"__blank\" as=\"a\" href={projectFrontmatter.demo}>\n                            Live Demo\n                        </Button>\n                        <IconButton label=\"github\" icon={['fab', 'github']} href={projectFrontmatter.src} />\n                    </ProjectLinks>\n                </Flex>\n\n                <section className=\"project__info\">\n                    <div>\n                        {projectFrontmatter.info.idea && (\n                            <aside>\n                                <InfoTitle>Idea</InfoTitle>\n                                <p>{projectFrontmatter.info.idea}</p>\n                            </aside>\n                        )}\n                        {projectFrontmatter.info.tech && (\n                            <aside>\n                                <InfoTitle>Core Technologies</InfoTitle>\n                                <ul>\n                                    {projectFrontmatter.info.tech.map((tech, i) => (\n                                        <li key={i}>{tech}</li>\n                                    ))}\n                                </ul>\n                            </aside>\n                        )}\n                        {projectFrontmatter.info.links && (\n                            <div>\n                                <InfoTitle>Links & Resources</InfoTitle>\n                                <ul>\n                                    {projectFrontmatter.info.links.map((link, i) => (\n                                        <li key={i}>\n                                            <a href={link[1]}>{link[0]}</a>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        )}\n                    </div>\n                    <div className=\"project__iframe-container\">\n                        <IFrame\n                            src={projectFrontmatter.iframe}\n                            livedemo={!!projectFrontmatter.iframe.match('youtube')}\n                        />\n                    </div>\n                </section>\n\n                <SplitLayout\n                    content={\n                        <article\n                            className=\"markdown-content\"\n                            dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }}\n                        />\n                    }\n                    aside={\n                        <div>\n                            <h4>Share on</h4>\n                            <SocialShareSection url={props.location.href} title={projectFrontmatter.title} />\n                        </div>\n                    }\n                />\n            </ProjectWrapper>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query findProject($id: String!) {\n        markdownRemark(id: { eq: $id }) {\n            html\n            fields {\n                slug\n            }\n            frontmatter {\n                excerpt\n                demo\n                iframe\n                src\n                title\n                date(formatString: \"MMMM DD, YYYY\", locale: \"en\")\n                info {\n                    idea\n                    tech\n                    links\n                }\n            }\n        }\n    }\n`;\n\nexport default Project;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nconst SplitLayoutWrapper = styled.section`\n    ${p => p.theme.spacing.sectionBottom};\n\n    & article:first-of-type {\n        margin-top: 15px;\n    }\n\n    display: grid;\n    grid-template-columns: minmax(750px, 1fr) 1fr;\n    grid-column-gap: 30px;\n    grid-template-areas: 'post side';\n\n    .layout__content {\n        grid-area: post;\n    }\n    .layout__aside {\n        grid-area: side;\n    }\n\n    @media ${props => props.theme.media.fablet} {\n        grid-template-columns: 1fr 1fr;\n        grid-column-gap: 0px;\n        grid-row-gap: 30px;\n        grid-template-areas:\n            'post post'\n            'side side';\n    }\n\n    .sticky__aside {\n        position: sticky;\n        top: 100px;\n    }\n`;\n\nconst SplitLayout = ({ content, aside }) => (\n    <SplitLayoutWrapper>\n        <section className=\"layout__content\">{content && content}</section>\n        <section className=\"layout__aside\">\n            <aside className=\"sticky__aside\">{aside && aside}</aside>\n        </section>\n    </SplitLayoutWrapper>\n);\n\nSplitLayout.propTypes = {\n    content: PropTypes.node.isRequired,\n    aside: PropTypes.node.isRequired,\n};\n\nexport default SplitLayout;\n"],"sourceRoot":""}